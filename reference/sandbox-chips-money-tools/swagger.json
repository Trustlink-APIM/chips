{
    "swagger": "2.0",
    "info": {
        "title": "CHIPS Money Integration Utilities",
        "version": "1.0",
        "license": {
            "name": " Apache 2.0 License",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "termsOfService": " https://marketplace.trustlinkhosting.com",
        "contact": {
            "name": "API Sales",
            "url": "https://marketplace.trustlinkhosting.com",
            "email": "apisales@trustlink.co.za"
        },
        "description": "APIs to assist integrators to test and integrate the CHIPS&reg; Money API.\n\n# Features\n* Simulate Cash In\n\n# Note\nThese APIs are only available in the sandbox environment"
    },
    "host": "marketplace-qa.trustlinkhosting.com:8165",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "paths": {
        "/simulate/cashin": {
            "post": {
                "summary": "Pay@ Cash In Simulation",
                "operationId": "chips-post-money-tools-simulate-cashin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "title": "Status",
                            "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                            "x-examples": {
                                "Success": {
                                    "apimStatus": {
                                        "marketplaceCode": 200,
                                        "marketplaceMsg": "Success",
                                        "providerCode": "200",
                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                    }
                                },
                                "Lookup failure": {
                                    "apimStatus": {
                                        "marketplaceCode": 200,
                                        "marketplaceMsg": "Success",
                                        "providerCode": "404",
                                        "providerMsg": "Not Found",
                                        "userMsg": "Item requested was not found",
                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                    }
                                },
                                "Authorization Error": {
                                    "apimStatus": {
                                        "marketplaceCode": 401,
                                        "marketplaceMsg": "Unauthorized",
                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                    }
                                }
                            },
                            "x-tags": [
                                "API Marketplace Core"
                            ],
                            "properties": {
                                "marketplaceCode": {
                                    "type": "integer",
                                    "example": 450,
                                    "description": "Indicates status on the marketplace layer. ",
                                    "title": "Markerplace layer status code"
                                },
                                "marketplaceMsg": {
                                    "type": "string",
                                    "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                    "default": "Success",
                                    "example": "An API subscription application for the requested URI was not found.",
                                    "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                },
                                "providerCode": {
                                    "type": "string",
                                    "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                    "example": "ERRDB04"
                                },
                                "providerMsg": {
                                    "type": "string",
                                    "example": "Table not found",
                                    "description": "Error message passed by provider"
                                },
                                "userMsg": {
                                    "type": "string",
                                    "example": "Your cart was not found.",
                                    "description": "User friendly message"
                                },
                                "statusCode": {
                                    "type": "integer",
                                    "description": "Same as the http status code",
                                    "example": 200
                                },
                                "marketplaceId": {
                                    "type": "string",
                                    "description": "Marketplace request id for support and tracing queries.",
                                    "example": "Id-ae65955ee8063fdc870e1758"
                                },
                                "marketplaceMocked": {
                                    "type": "boolean",
                                    "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                }
                            },
                            "required": [
                                "statusCode",
                                "marketplaceId"
                            ]
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "schema": {
                            "title": "API Marketplace Generic Error",
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "apimStatus": {
                                    "type": "object",
                                    "title": "Status",
                                    "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                                    "x-examples": {
                                        "Success": {
                                            "apimStatus": {
                                                "marketplaceCode": 200,
                                                "marketplaceMsg": "Success",
                                                "providerCode": "200",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        },
                                        "Lookup failure": {
                                            "apimStatus": {
                                                "marketplaceCode": 200,
                                                "marketplaceMsg": "Success",
                                                "providerCode": "404",
                                                "providerMsg": "Not Found",
                                                "userMsg": "Item requested was not found",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        },
                                        "Authorization Error": {
                                            "apimStatus": {
                                                "marketplaceCode": 401,
                                                "marketplaceMsg": "Unauthorized",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        }
                                    },
                                    "x-tags": [
                                        "API Marketplace Core"
                                    ],
                                    "properties": {
                                        "marketplaceCode": {
                                            "type": "integer",
                                            "example": 450,
                                            "description": "Indicates status on the marketplace layer. ",
                                            "title": "Markerplace layer status code"
                                        },
                                        "marketplaceMsg": {
                                            "type": "string",
                                            "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                            "default": "Success",
                                            "example": "An API subscription application for the requested URI was not found.",
                                            "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                        },
                                        "providerCode": {
                                            "type": "string",
                                            "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                            "example": "ERRDB04"
                                        },
                                        "providerMsg": {
                                            "type": "string",
                                            "example": "Table not found",
                                            "description": "Error message passed by provider"
                                        },
                                        "userMsg": {
                                            "type": "string",
                                            "example": "Your cart was not found.",
                                            "description": "User friendly message"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "description": "Same as the http status code",
                                            "example": 200
                                        },
                                        "marketplaceId": {
                                            "type": "string",
                                            "description": "Marketplace request id for support and tracing queries.",
                                            "example": "Id-ae65955ee8063fdc870e1758"
                                        },
                                        "marketplaceMocked": {
                                            "type": "boolean",
                                            "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                        }
                                    },
                                    "required": [
                                        "statusCode",
                                        "marketplaceId"
                                    ]
                                },
                                "billing": {
                                    "title": "Billing",
                                    "type": "object",
                                    "properties": {
                                        "cost": {
                                            "type": "integer",
                                            "description": "Cost in API credits charged for the request.",
                                            "example": 45
                                        },
                                        "tier": {
                                            "type": "integer",
                                            "description": "Current Tier level for the API Organization.",
                                            "enum": [
                                                1,
                                                2,
                                                3,
                                                4
                                            ],
                                            "example": 4
                                        },
                                        "credits": {
                                            "type": "integer",
                                            "description": "Number of API credits remaining after the call was processed.",
                                            "example": 3475
                                        }
                                    },
                                    "required": [
                                        "credits",
                                        "tier",
                                        "cost"
                                    ],
                                    "x-examples": {
                                        "Successful Request": {
                                            "value": {
                                                "credit": 34570,
                                                "tier": 4,
                                                "cost": 20
                                            }
                                        },
                                        "Success - No charge": {
                                            "value": {
                                                "credit": 34450,
                                                "tier": 4,
                                                "cost": 0
                                            }
                                        }
                                    },
                                    "description": "Marketplace billing standard response object. "
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "title": "API Marketplace Generic Error",
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "apimStatus": {
                                    "type": "object",
                                    "title": "Status",
                                    "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                                    "x-examples": {
                                        "Success": {
                                            "apimStatus": {
                                                "marketplaceCode": 200,
                                                "marketplaceMsg": "Success",
                                                "providerCode": "200",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        },
                                        "Lookup failure": {
                                            "apimStatus": {
                                                "marketplaceCode": 200,
                                                "marketplaceMsg": "Success",
                                                "providerCode": "404",
                                                "providerMsg": "Not Found",
                                                "userMsg": "Item requested was not found",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        },
                                        "Authorization Error": {
                                            "apimStatus": {
                                                "marketplaceCode": 401,
                                                "marketplaceMsg": "Unauthorized",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        }
                                    },
                                    "x-tags": [
                                        "API Marketplace Core"
                                    ],
                                    "properties": {
                                        "marketplaceCode": {
                                            "type": "integer",
                                            "example": 450,
                                            "description": "Indicates status on the marketplace layer. ",
                                            "title": "Markerplace layer status code"
                                        },
                                        "marketplaceMsg": {
                                            "type": "string",
                                            "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                            "default": "Success",
                                            "example": "An API subscription application for the requested URI was not found.",
                                            "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                        },
                                        "providerCode": {
                                            "type": "string",
                                            "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                            "example": "ERRDB04"
                                        },
                                        "providerMsg": {
                                            "type": "string",
                                            "example": "Table not found",
                                            "description": "Error message passed by provider"
                                        },
                                        "userMsg": {
                                            "type": "string",
                                            "example": "Your cart was not found.",
                                            "description": "User friendly message"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "description": "Same as the http status code",
                                            "example": 200
                                        },
                                        "marketplaceId": {
                                            "type": "string",
                                            "description": "Marketplace request id for support and tracing queries.",
                                            "example": "Id-ae65955ee8063fdc870e1758"
                                        },
                                        "marketplaceMocked": {
                                            "type": "boolean",
                                            "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                        }
                                    },
                                    "required": [
                                        "statusCode",
                                        "marketplaceId"
                                    ]
                                },
                                "billing": {
                                    "title": "Billing",
                                    "type": "object",
                                    "properties": {
                                        "cost": {
                                            "type": "integer",
                                            "description": "Cost in API credits charged for the request.",
                                            "example": 45
                                        },
                                        "tier": {
                                            "type": "integer",
                                            "description": "Current Tier level for the API Organization.",
                                            "enum": [
                                                1,
                                                2,
                                                3,
                                                4
                                            ],
                                            "example": 4
                                        },
                                        "credits": {
                                            "type": "integer",
                                            "description": "Number of API credits remaining after the call was processed.",
                                            "example": 3475
                                        }
                                    },
                                    "required": [
                                        "credits",
                                        "tier",
                                        "cost"
                                    ],
                                    "x-examples": {
                                        "Successful Request": {
                                            "value": {
                                                "credit": 34570,
                                                "tier": 4,
                                                "cost": 20
                                            }
                                        },
                                        "Success - No charge": {
                                            "value": {
                                                "credit": 34450,
                                                "tier": 4,
                                                "cost": 0
                                            }
                                        }
                                    },
                                    "description": "Marketplace billing standard response object. "
                                }
                            }
                        }
                    }
                },
                "description": "Allow simulation of the Cash In transaction at any Pay@ kiosk.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mobileNumber": {
                                    "type": "string",
                                    "description": "Mobile number associated with the wallet the needs to be topped up. (International format)",
                                    "example": "+27851231234"
                                },
                                "amount": {
                                    "type": "number",
                                    "description": "Amount to load into wallet",
                                    "format": "double",
                                    "example": 300
                                }
                            },
                            "required": [
                                "mobileNumber",
                                "amount"
                            ]
                        },
                        "description": ""
                    },
                    {
                        "type": "string",
                        "description": "Marketplace API Key",
                        "name": "marketplaceKeyId",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Version of the API. (Latest version 1.0)",
                        "name": "version",
                        "in": "query",
                        "required": true
                    }
                ],
                "tags": [
                    "Tools"
                ]
            }
        }
    },
    "definitions": {},
    "basePath": "/sandbox/chips/money/tools",
    "tags": [
        {
            "name": "Tools"
        },
        null,
        null
    ],
    "securityDefinitions": {
        "Marketplace API Key": {
            "type": "apiKey",
            "description": "API Key",
            "name": "marketplaceKeyId"
        },
        "in": "header"
    },
    "security": [
        {
            "Marketplace API Key": []
        }
    ],
    "buildtarget": "stoplight"
}