{
    "swagger": "2.0",
    "x-stoplight": {
        "id": "6icxw86r13x9o"
    },
    "info": {
        "title": "Chips SmartSafe Integration API",
        "version": "1.0",
        "description": "Api's to lookup, update and create SmartSafes.",
        "contact": {
            "url": "https://marketplace.trustlinkhosting.com",
            "email": "apisales@trustlink.co.za",
            "name": "API Sales"
        },
        "termsOfService": " https://marketplace.trustlinkhosting.com",
        "license": {
            "name": " Apache 2.0 License",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "paths": {
        "/smartsafes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Account UUID",
                        "in": "query",
                        "name": "accountUuid",
                        "type": "string",
                        "minLength": 36,
                        "maxLength": 36,
                        "pattern": "UUID (ISO/IEC 9834-8:201)"
                    },
                    {
                        "description": "Date from",
                        "format": "date-time",
                        "in": "query",
                        "name": "createdFrom",
                        "type": "string",
                        "pattern": "$(date-time)"
                    },
                    {
                        "description": "Date until",
                        "format": "date-time",
                        "in": "query",
                        "name": "createdUntil",
                        "type": "string",
                        "pattern": "$(date-time)"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "in": "query",
                        "name": "deviceId",
                        "type": "string"
                    },
                    {
                        "description": "Name of device",
                        "in": "query",
                        "name": "deviceName",
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "in": "query",
                        "name": "order",
                        "default": "ASC",
                        "description": "Sort order. Available values: ASC, DESC"
                    },
                    {
                        "type": "string",
                        "in": "query",
                        "name": "orderBy",
                        "description": "Sort field. Available values : accountUuid, created, description, lastModified, merchantId, merchantName, terminalId, serialNumber",
                        "default": "lastModified"
                    },
                    {
                        "type": "integer",
                        "in": "query",
                        "name": "page",
                        "description": "Page Number",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "type": "integer",
                        "in": "query",
                        "name": "size",
                        "format": "int32",
                        "default": 10,
                        "description": "Page size"
                    },
                    {
                        "type": "string",
                        "in": "query",
                        "name": "MerchantName"
                    }
                ],
                "operationId": "chips-businesses-smartsafes-retreive-get",
                "summary": "Get one or more accounts",
                "description": "Find or retreive smartsafe by criteria",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-examples": {
                                "Example 1": {
                                    "pageNumber": 0,
                                    "pageSize": 0,
                                    "totalPages": 0,
                                    "totalElements": 0,
                                    "values": [
                                        {
                                            "createdBy": "string",
                                            "created": "2022-03-10T12:15:50-04:00",
                                            "lastModifiedBy": "string",
                                            "lastModified": "2022-03-10T12:15:50-04:00",
                                            "uuid": "string",
                                            "deviceId": "25d1c607-f471-4466-a1de-a22e374c8352",
                                            "accountUuid": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                            "merchantName": "Omnia",
                                            "siteName": "Glenfield",
                                            "enabled": true
                                        }
                                    ]
                                }
                            },
                            "description": "Page Number",
                            "properties": {
                                "pageNumber": {
                                    "type": "integer",
                                    "description": "Page Size",
                                    "format": "int32"
                                },
                                "pageSize": {
                                    "type": "integer",
                                    "description": "Total Number of pages",
                                    "format": "int32"
                                },
                                "totalPages": {
                                    "type": "integer",
                                    "description": "Total number of entries",
                                    "format": "int32"
                                },
                                "totalElements": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "values": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "createdBy": {
                                                "type": "string",
                                                "description": "Created by user"
                                            },
                                            "created": {
                                                "type": "string",
                                                "description": "Created timestamp",
                                                "format": "date-time",
                                                "example": "2022-03-10T12:15:50-04:00"
                                            },
                                            "lastModifiedBy": {
                                                "type": "string",
                                                "description": "Last modified by user"
                                            },
                                            "lastModified": {
                                                "type": "string",
                                                "description": "Last modified timestamp",
                                                "example": "2022-03-10T12:15:50-04:00"
                                            },
                                            "uuid": {
                                                "type": "string",
                                                "description": "System allocated UUID (ISO/IEC 9834-8:201)"
                                            },
                                            "deviceId": {
                                                "type": "string",
                                                "example": "25d1c607-f471-4466-a1de-a22e374c8352",
                                                "minLength": 36,
                                                "maxLength": 36,
                                                "description": "The deviceId of the SmartSafe"
                                            },
                                            "deviceName": {
                                                "type": "string",
                                                "example": "ABC",
                                                "maxLength": 25,
                                                "description": "Device name"
                                            },
                                            "accountUuid": {
                                                "type": "string",
                                                "description": "The accountUuid of the merhant",
                                                "example": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                                "minLength": 36,
                                                "maxLength": 36
                                            },
                                            "merchantName": {
                                                "type": "string",
                                                "example": "Omnea",
                                                "maxLength": 25,
                                                "description": "Merc"
                                            },
                                            "enabled": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                },
                                "apimStatus": {
                                    "type": "object",
                                    "title": "Status",
                                    "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                                    "x-examples": {
                                        "Success": {
                                            "apimStatus": {
                                                "marketplaceCode": 200,
                                                "marketplaceMsg": "Success",
                                                "providerCode": "200",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        },
                                        "Lookup failure": {
                                            "apimStatus": {
                                                "marketplaceCode": 200,
                                                "marketplaceMsg": "Success",
                                                "providerCode": "404",
                                                "providerMsg": "Not Found",
                                                "userMsg": "Item requested was not found",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        },
                                        "Authorization Error": {
                                            "apimStatus": {
                                                "marketplaceCode": 401,
                                                "marketplaceMsg": "Unauthorized",
                                                "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                            }
                                        }
                                    },
                                    "x-tags": [
                                        "API Marketplace Core"
                                    ],
                                    "properties": {
                                        "marketplaceCode": {
                                            "type": "integer",
                                            "example": 450,
                                            "description": "Indicates status on the marketplace layer. ",
                                            "title": "Markerplace layer status code"
                                        },
                                        "marketplaceMsg": {
                                            "type": "string",
                                            "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                            "default": "Success",
                                            "example": "An API subscription application for the requested URI was not found.",
                                            "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                        },
                                        "providerCode": {
                                            "type": "string",
                                            "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                            "example": "ERRDB04"
                                        },
                                        "providerMsg": {
                                            "type": "string",
                                            "example": "Table not found",
                                            "description": "Error message passed by provider"
                                        },
                                        "userMsg": {
                                            "type": "string",
                                            "example": "Your cart was not found.",
                                            "description": "User friendly message"
                                        },
                                        "statusCode": {
                                            "type": "integer",
                                            "description": "Same as the http status code",
                                            "example": 200
                                        },
                                        "marketplaceId": {
                                            "type": "string",
                                            "description": "Marketplace request id for support and tracing queries.",
                                            "example": "Id-ae65955ee8063fdc870e1758"
                                        },
                                        "marketplaceMocked": {
                                            "type": "boolean",
                                            "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                        }
                                    },
                                    "required": [
                                        "statusCode",
                                        "marketplaceId"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Smart Safe"
                ]
            },
            "parameters": [],
            "post": {
                "summary": "Create SmartSafe",
                "operationId": "chips-businesses-smartsafes-create-post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "x-examples": {
                                "Example 1": {
                                    "deviceId": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "accountUuid": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "merchantName": "Omnia",
                                    "siteName": "Glenfield",
                                    "enabled": true
                                }
                            },
                            "properties": {
                                "deviceId": {
                                    "type": "string",
                                    "example": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "pattern": "\\S",
                                    "description": "The deviceId of the Smartsafe"
                                },
                                "deviceName": {
                                    "type": "string",
                                    "maxLength": 25,
                                    "pattern": "\\S",
                                    "example": "ABC",
                                    "description": "Device Name"
                                },
                                "accountUuid": {
                                    "type": "string",
                                    "description": "The accountUuid of the merhant",
                                    "example": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "pattern": "\\S",
                                    "minLength": 36,
                                    "maxLength": 36
                                },
                                "merchantName": {
                                    "type": "string",
                                    "description": "Merchant name",
                                    "example": "Omnea",
                                    "pattern": "\\S",
                                    "maxLength": 25
                                },
                                "enabled": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "deviceId",
                                "deviceName",
                                "accountUuid",
                                "merchantName",
                                "enabled"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-examples": {
                                "Example 1": {
                                    "createdBy": "string",
                                    "created": "2022-03-10T12:15:50-04:00",
                                    "lastModifiedBy": "string",
                                    "lastModified": "2022-03-10T12:15:50-04:00",
                                    "uuid": "string",
                                    "deviceId": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "accountUuid": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "merchantName": "Omnia",
                                    "siteName": "Glenfield",
                                    "enabled": true
                                }
                            },
                            "properties": {
                                "createdBy": {
                                    "type": "string",
                                    "description": "Created by user"
                                },
                                "created": {
                                    "type": "string",
                                    "description": "Created timesta",
                                    "example": "2022-03-10T12:15:50-04:00",
                                    "format": "date-time"
                                },
                                "lastModifiedBy": {
                                    "type": "string",
                                    "description": "Last modified by user"
                                },
                                "lastModified": {
                                    "type": "string",
                                    "description": "Last modified",
                                    "example": "2022-03-10T12:15:50-04:00"
                                },
                                "uuid": {
                                    "type": "string",
                                    "description": "System allocated UUID (ISO/IEC 9834-8:201)."
                                },
                                "deviceId": {
                                    "type": "string",
                                    "example": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The deviceId of the SmartSafe"
                                },
                                "deviceName": {
                                    "type": "string",
                                    "maxLength": 25,
                                    "example": "ABC",
                                    "description": "Device name"
                                },
                                "accountUuid": {
                                    "type": "string",
                                    "example": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The accountUiid of the merchant"
                                },
                                "merchantName": {
                                    "type": "string",
                                    "example": "ABC Fuel or ABC shop",
                                    "maxLength": 25,
                                    "description": "Merchant name"
                                },
                                "enabled": {
                                    "type": "boolean"
                                },
                                "apimStatus": {
                                    "type": "object",
                                    "properties": {
                                        "": {
                                            "type": "object",
                                            "title": "Status",
                                            "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                                            "x-examples": {
                                                "Success": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "200",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Lookup failure": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "404",
                                                        "providerMsg": "Not Found",
                                                        "userMsg": "Item requested was not found",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Authorization Error": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 401,
                                                        "marketplaceMsg": "Unauthorized",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                }
                                            },
                                            "x-tags": [
                                                "API Marketplace Core"
                                            ],
                                            "properties": {
                                                "marketplaceCode": {
                                                    "type": "integer",
                                                    "example": 450,
                                                    "description": "Indicates status on the marketplace layer. ",
                                                    "title": "Markerplace layer status code"
                                                },
                                                "marketplaceMsg": {
                                                    "type": "string",
                                                    "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                                    "default": "Success",
                                                    "example": "An API subscription application for the requested URI was not found.",
                                                    "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                                },
                                                "providerCode": {
                                                    "type": "string",
                                                    "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                                    "example": "ERRDB04"
                                                },
                                                "providerMsg": {
                                                    "type": "string",
                                                    "example": "Table not found",
                                                    "description": "Error message passed by provider"
                                                },
                                                "userMsg": {
                                                    "type": "string",
                                                    "example": "Your cart was not found.",
                                                    "description": "User friendly message"
                                                },
                                                "statusCode": {
                                                    "type": "integer",
                                                    "description": "Same as the http status code",
                                                    "example": 200
                                                },
                                                "marketplaceId": {
                                                    "type": "string",
                                                    "description": "Marketplace request id for support and tracing queries.",
                                                    "example": "Id-ae65955ee8063fdc870e1758"
                                                },
                                                "marketplaceMocked": {
                                                    "type": "boolean",
                                                    "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                                }
                                            },
                                            "required": [
                                                "statusCode",
                                                "marketplaceId"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Smart Safe"
                ],
                "description": "Create SmartSafe "
            }
        },
        "/smartsafes/{uuid}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "UUID (ISO/IEC 9834-8:201)",
                        "in": "path",
                        "maxLength": 36,
                        "minLength": 36,
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-examples": {
                                "Example 1": {
                                    "createdBy": "string",
                                    "created": "2022-03-10T12:15:50-04:00",
                                    "lastModifiedBy": "string",
                                    "lastModified": "2022-03-10T12:15:50-04:00",
                                    "uuid": "string",
                                    "deviceId": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "accountUuid": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "merchantName": "Omnia",
                                    "siteName": "Glenfield",
                                    "enabled": true
                                }
                            },
                            "properties": {
                                "createdBy": {
                                    "type": "string",
                                    "description": "Created by user"
                                },
                                "created": {
                                    "type": "string",
                                    "description": "Created timesta",
                                    "example": "2022-03-10T12:15:50-04:00",
                                    "format": "date-time"
                                },
                                "lastModifiedBy": {
                                    "type": "string",
                                    "description": "Last modified by user"
                                },
                                "lastModified": {
                                    "type": "string",
                                    "description": "Last modified",
                                    "example": "2022-03-10T12:15:50-04:00"
                                },
                                "uuid": {
                                    "type": "string",
                                    "description": "System allocated UUID (ISO/IEC 9834-8:201)."
                                },
                                "deviceId": {
                                    "type": "string",
                                    "example": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The deviceId of the SmartSafe"
                                },
                                "deviceName": {
                                    "type": "string",
                                    "maxLength": 25,
                                    "example": "ABC",
                                    "description": "Device name"
                                },
                                "accountUuid": {
                                    "type": "string",
                                    "example": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The accountUiid of the merchant"
                                },
                                "merchantName": {
                                    "type": "string",
                                    "example": "ABC Fuel or ABC shop",
                                    "maxLength": 25,
                                    "description": "Merchant name"
                                },
                                "enabled": {
                                    "type": "boolean"
                                },
                                "apimStatus": {
                                    "type": "object",
                                    "properties": {
                                        "": {
                                            "type": "object",
                                            "title": "Status",
                                            "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                                            "x-examples": {
                                                "Success": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "200",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Lookup failure": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "404",
                                                        "providerMsg": "Not Found",
                                                        "userMsg": "Item requested was not found",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Authorization Error": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 401,
                                                        "marketplaceMsg": "Unauthorized",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                }
                                            },
                                            "x-tags": [
                                                "API Marketplace Core"
                                            ],
                                            "properties": {
                                                "marketplaceCode": {
                                                    "type": "integer",
                                                    "example": 450,
                                                    "description": "Indicates status on the marketplace layer. ",
                                                    "title": "Markerplace layer status code"
                                                },
                                                "marketplaceMsg": {
                                                    "type": "string",
                                                    "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                                    "default": "Success",
                                                    "example": "An API subscription application for the requested URI was not found.",
                                                    "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                                },
                                                "providerCode": {
                                                    "type": "string",
                                                    "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                                    "example": "ERRDB04"
                                                },
                                                "providerMsg": {
                                                    "type": "string",
                                                    "example": "Table not found",
                                                    "description": "Error message passed by provider"
                                                },
                                                "userMsg": {
                                                    "type": "string",
                                                    "example": "Your cart was not found.",
                                                    "description": "User friendly message"
                                                },
                                                "statusCode": {
                                                    "type": "integer",
                                                    "description": "Same as the http status code",
                                                    "example": 200
                                                },
                                                "marketplaceId": {
                                                    "type": "string",
                                                    "description": "Marketplace request id for support and tracing queries.",
                                                    "example": "Id-ae65955ee8063fdc870e1758"
                                                },
                                                "marketplaceMocked": {
                                                    "type": "boolean",
                                                    "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                                }
                                            },
                                            "required": [
                                                "statusCode",
                                                "marketplaceId"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "operationId": "chips-businesses-smartsafes-uuid-delete",
                "summary": "Delete SmartSafe by UUID",
                "description": "Delete SmartSafe with unque identifier."
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "UUID (ISO/IEC 9834-8:201)",
                        "in": "path",
                        "maxLength": 36,
                        "minLength": 36,
                        "name": "uuid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-examples": {
                                "Example 1": {
                                    "createdBy": "string",
                                    "created": "2022-03-10T12:15:50-04:00",
                                    "lastModifiedBy": "string",
                                    "lastModified": "2022-03-10T12:15:50-04:00",
                                    "uuid": "string",
                                    "deviceId": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "accountUuid": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "merchantName": "Omnia",
                                    "siteName": "Glenfield",
                                    "enabled": true
                                }
                            },
                            "properties": {
                                "createdBy": {
                                    "type": "string",
                                    "description": "Created by user"
                                },
                                "created": {
                                    "type": "string",
                                    "description": "Created timesta",
                                    "example": "2022-03-10T12:15:50-04:00",
                                    "format": "date-time"
                                },
                                "lastModifiedBy": {
                                    "type": "string",
                                    "description": "Last modified by user"
                                },
                                "lastModified": {
                                    "type": "string",
                                    "description": "Last modified",
                                    "example": "2022-03-10T12:15:50-04:00"
                                },
                                "uuid": {
                                    "type": "string",
                                    "description": "System allocated UUID (ISO/IEC 9834-8:201)."
                                },
                                "deviceId": {
                                    "type": "string",
                                    "example": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The deviceId of the SmartSafe"
                                },
                                "deviceName": {
                                    "type": "string",
                                    "maxLength": 25,
                                    "example": "ABC",
                                    "description": "Device name"
                                },
                                "accountUuid": {
                                    "type": "string",
                                    "example": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The accountUiid of the merchant"
                                },
                                "merchantName": {
                                    "type": "string",
                                    "example": "ABC Fuel or ABC shop",
                                    "maxLength": 25,
                                    "description": "Merchant name"
                                },
                                "enabled": {
                                    "type": "boolean"
                                },
                                "apimStatus": {
                                    "type": "object",
                                    "properties": {
                                        "": {
                                            "type": "object",
                                            "title": "Status",
                                            "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                                            "x-examples": {
                                                "Success": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "200",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Lookup failure": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "404",
                                                        "providerMsg": "Not Found",
                                                        "userMsg": "Item requested was not found",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Authorization Error": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 401,
                                                        "marketplaceMsg": "Unauthorized",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                }
                                            },
                                            "x-tags": [
                                                "API Marketplace Core"
                                            ],
                                            "properties": {
                                                "marketplaceCode": {
                                                    "type": "integer",
                                                    "example": 450,
                                                    "description": "Indicates status on the marketplace layer. ",
                                                    "title": "Markerplace layer status code"
                                                },
                                                "marketplaceMsg": {
                                                    "type": "string",
                                                    "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                                    "default": "Success",
                                                    "example": "An API subscription application for the requested URI was not found.",
                                                    "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                                },
                                                "providerCode": {
                                                    "type": "string",
                                                    "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                                    "example": "ERRDB04"
                                                },
                                                "providerMsg": {
                                                    "type": "string",
                                                    "example": "Table not found",
                                                    "description": "Error message passed by provider"
                                                },
                                                "userMsg": {
                                                    "type": "string",
                                                    "example": "Your cart was not found.",
                                                    "description": "User friendly message"
                                                },
                                                "statusCode": {
                                                    "type": "integer",
                                                    "description": "Same as the http status code",
                                                    "example": 200
                                                },
                                                "marketplaceId": {
                                                    "type": "string",
                                                    "description": "Marketplace request id for support and tracing queries.",
                                                    "example": "Id-ae65955ee8063fdc870e1758"
                                                },
                                                "marketplaceMocked": {
                                                    "type": "boolean",
                                                    "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                                }
                                            },
                                            "required": [
                                                "statusCode",
                                                "marketplaceId"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Account"
                ],
                "operationId": "chips-businesses-smartsafes-uuid-get",
                "summary": "Retreive SmartSafe by UUID",
                "description": "Retrieve SmartSafe by unique identifier."
            },
            "parameters": [
                {
                    "type": "string",
                    "name": "uuid",
                    "in": "path",
                    "required": true
                }
            ],
            "put": {
                "summary": "Update SmartSafe by UUID",
                "operationId": "chips-businesses-smartsafes-uuid-put",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-examples": {
                                "Example 1": {
                                    "createdBy": "string",
                                    "created": "2022-03-10T12:15:50-04:00",
                                    "lastModifiedBy": "string",
                                    "lastModified": "2022-03-10T12:15:50-04:00",
                                    "uuid": "string",
                                    "deviceId": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "accountUuid": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "merchantName": "Omnia",
                                    "siteName": "Glenfield",
                                    "enabled": true
                                }
                            },
                            "properties": {
                                "createdBy": {
                                    "type": "string",
                                    "description": "Created by user"
                                },
                                "created": {
                                    "type": "string",
                                    "description": "Created timesta",
                                    "example": "2022-03-10T12:15:50-04:00",
                                    "format": "date-time"
                                },
                                "lastModifiedBy": {
                                    "type": "string",
                                    "description": "Last modified by user"
                                },
                                "lastModified": {
                                    "type": "string",
                                    "description": "Last modified",
                                    "example": "2022-03-10T12:15:50-04:00"
                                },
                                "uuid": {
                                    "type": "string",
                                    "description": "System allocated UUID (ISO/IEC 9834-8:201)."
                                },
                                "deviceId": {
                                    "type": "string",
                                    "example": "25d1c607-f471-4466-a1de-a22e374c8352",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The deviceId of the SmartSafe"
                                },
                                "deviceName": {
                                    "type": "string",
                                    "maxLength": 25,
                                    "example": "ABC",
                                    "description": "Device name"
                                },
                                "accountUuid": {
                                    "type": "string",
                                    "example": "e99ce169-6a8b-4f3d-8bb4-dd6cdadd74c7",
                                    "minLength": 36,
                                    "maxLength": 36,
                                    "description": "The accountUiid of the merchant"
                                },
                                "merchantName": {
                                    "type": "string",
                                    "example": "ABC Fuel or ABC shop",
                                    "maxLength": 25,
                                    "description": "Merchant name"
                                },
                                "enabled": {
                                    "type": "boolean"
                                },
                                "apimStatus": {
                                    "type": "object",
                                    "properties": {
                                        "": {
                                            "type": "object",
                                            "title": "Status",
                                            "description": "All responses from the marketplace will at least contain the *apimStatus* object.  The purpose is to inform the requester of status details above and beyond the HTTP status code.\n\nNote that it is possible to have a success indicator on the marketplace layer, but have a unsuccessful indication on the *providerCode*. This in essence means that even if the API to the provider returned for example a 'not found' result, the request is still chargable on the marketplace layer.\n\nThe *providerCode* will only be present if the API was routed to the API Provider.\n\n## Marketplace Codes\n\n| Code | Description |\n|------|---------------|\n| 200 | Successfully serviced and charged. |\n| 250 | Successfully serviced with no charge. |\n| 401 | Unauthorized.  |\n| 404 | Not Found. |\n| 450 | Application Not Found. |\n| 451 | Organization Not Found. |\n| 500 | Internal Server Error. | \n\n\n\n",
                                            "x-examples": {
                                                "Success": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "200",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Lookup failure": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 200,
                                                        "marketplaceMsg": "Success",
                                                        "providerCode": "404",
                                                        "providerMsg": "Not Found",
                                                        "userMsg": "Item requested was not found",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                },
                                                "Authorization Error": {
                                                    "apimStatus": {
                                                        "marketplaceCode": 401,
                                                        "marketplaceMsg": "Unauthorized",
                                                        "marketplaceId": "Id-ae65955ee8063fdc870e1758"
                                                    }
                                                }
                                            },
                                            "x-tags": [
                                                "API Marketplace Core"
                                            ],
                                            "properties": {
                                                "marketplaceCode": {
                                                    "type": "integer",
                                                    "example": 450,
                                                    "description": "Indicates status on the marketplace layer. ",
                                                    "title": "Markerplace layer status code"
                                                },
                                                "marketplaceMsg": {
                                                    "type": "string",
                                                    "title": "Human readable message to provide more details on the *marketplaceCode*.",
                                                    "default": "Success",
                                                    "example": "An API subscription application for the requested URI was not found.",
                                                    "description": "Human readable description providing details about the error. On success the value will be 'Success'"
                                                },
                                                "providerCode": {
                                                    "type": "string",
                                                    "description": "Error code returned API provider. The value is of type string seeing as the prodiver might respond with a string error code like 'ERRDB01'",
                                                    "example": "ERRDB04"
                                                },
                                                "providerMsg": {
                                                    "type": "string",
                                                    "example": "Table not found",
                                                    "description": "Error message passed by provider"
                                                },
                                                "userMsg": {
                                                    "type": "string",
                                                    "example": "Your cart was not found.",
                                                    "description": "User friendly message"
                                                },
                                                "statusCode": {
                                                    "type": "integer",
                                                    "description": "Same as the http status code",
                                                    "example": 200
                                                },
                                                "marketplaceId": {
                                                    "type": "string",
                                                    "description": "Marketplace request id for support and tracing queries.",
                                                    "example": "Id-ae65955ee8063fdc870e1758"
                                                },
                                                "marketplaceMocked": {
                                                    "type": "boolean",
                                                    "description": "Indicates if the response was generated by a marketplace mockup. This is only relevant to API that start with the /storefront and /sandbox paths. \nIf true, the API was not passed on to the API provider backend, but the response is being mocked up the marketplace.\nIf false, it indicates that the API call was pushed through to the API provider backend. The backend in turn might have stubbed the response in order to prevent costs like SMS notifications. "
                                                }
                                            },
                                            "required": [
                                                "statusCode",
                                                "marketplaceId"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "detail": {
                                    "type": "string"
                                }
                            },
                            "x-examples": {
                                "Example 1": {
                                    "key": "string",
                                    "code": "string",
                                    "description": "string",
                                    "detail": "string"
                                }
                            }
                        }
                    }
                },
                "description": "Replace SmartSAfe by using unique identifier"
            }
        }
    },
    "definitions": {
        "AccountData": {
            "properties": {
                "approveLimitAmount": {
                    "description": "Approved limit amount",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number"
                },
                "autoLimitAmount": {
                    "description": "Automatic limit amount",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number"
                },
                "availableBalanceAmount": {
                    "description": "Available balance amount",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number"
                },
                "availableDailyAmount": {
                    "description": "Remaining amount available for current day",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number"
                },
                "created": {
                    "description": "Date and time created (ISO8601 yyyy-mm-ddThh:mm:ss.nnnZ)",
                    "format": "date-time",
                    "type": "string"
                },
                "createdBy": {
                    "description": "Member UUID (ISO/IEC 9834-8:201)",
                    "type": "string",
                    "x-nullable": true
                },
                "dailyLimitAmount": {
                    "description": "Maximum amount available per day",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number"
                },
                "lastModified": {
                    "description": "Date and time last modified (ISO8601 yyyy-mm-ddThh:mm:ss.nnnZ)",
                    "format": "date-time",
                    "type": "string"
                },
                "memberUuid": {
                    "description": "Member UUID (ISO/IEC 9834-8:201)",
                    "maxLength": 36,
                    "minLength": 36,
                    "type": "string"
                },
                "modifiedBy": {
                    "description": "Member UUID (ISO/IEC 9834-8:201)",
                    "type": "string",
                    "x-nullable": true
                },
                "requestId": {
                    "description": "External request identifier. Recommended UUID (ISO/IEC 9834-8:201)",
                    "maxLength": 36,
                    "minLength": 0,
                    "type": "string",
                    "x-nullable": true
                },
                "transactionLimitAmount": {
                    "description": "Maximum amount per transaction",
                    "type": "number"
                },
                "uuid": {
                    "description": "UUID (ISO/IEC 9834-8:201)",
                    "maxLength": 36,
                    "minLength": 36,
                    "type": "string"
                }
            },
            "required": [
                "created",
                "lastModified",
                "memberUuid",
                "uuid"
            ],
            "type": "object",
            "description": "Account return data"
        },
        "AccountInput": {
            "properties": {
                "approveLimitAmount": {
                    "description": "Approved limit amount",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number",
                    "x-nullable": true
                },
                "autoLimitAmount": {
                    "description": "Automatic limit amount",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number",
                    "x-nullable": true
                },
                "dailyLimitAmount": {
                    "description": "Maximum amount available per day",
                    "exclusiveMinimum": false,
                    "minimum": 0,
                    "type": "number",
                    "x-nullable": true
                },
                "memberUuid": {
                    "description": "Member UUID (ISO/IEC 9834-8:201)",
                    "maxLength": 36,
                    "minLength": 36,
                    "type": "string"
                }
            },
            "required": [
                "memberUuid"
            ],
            "type": "object",
            "description": "Account input data"
        },
        "JsonNode": {
            "properties": {
                "array": {
                    "type": "boolean"
                },
                "bigDecimal": {
                    "type": "boolean"
                },
                "bigInteger": {
                    "type": "boolean"
                },
                "binary": {
                    "type": "boolean"
                },
                "boolean": {
                    "type": "boolean"
                },
                "containerNode": {
                    "type": "boolean"
                },
                "double": {
                    "type": "boolean"
                },
                "float": {
                    "type": "boolean"
                },
                "floatingPointNumber": {
                    "type": "boolean"
                },
                "int": {
                    "type": "boolean"
                },
                "integralNumber": {
                    "type": "boolean"
                },
                "long": {
                    "type": "boolean"
                },
                "missingNode": {
                    "type": "boolean"
                },
                "nodeType": {
                    "enum": [
                        "ARRAY",
                        "BINARY",
                        "BOOLEAN",
                        "MISSING",
                        "NULL",
                        "NUMBER",
                        "OBJECT",
                        "POJO",
                        "STRING"
                    ],
                    "type": "string"
                },
                "null": {
                    "type": "boolean"
                },
                "number": {
                    "type": "boolean"
                },
                "object": {
                    "type": "boolean"
                },
                "pojo": {
                    "type": "boolean"
                },
                "short": {
                    "type": "boolean"
                },
                "textual": {
                    "type": "boolean"
                },
                "valueNode": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "PatchOperation": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string",
                    "description": "From"
                },
                "op": {
                    "enum": [
                        "add",
                        "copy",
                        "move",
                        "remove",
                        "replace",
                        "test"
                    ],
                    "type": "string",
                    "description": "Operation Enum:\n[ add, copy, move, remove, replace, test ]"
                },
                "path": {
                    "type": "string",
                    "description": "Path"
                },
                "value": {
                    "properties": {
                        "array": {
                            "type": "boolean"
                        },
                        "bigDecimal": {
                            "type": "boolean"
                        },
                        "bigInteger": {
                            "type": "boolean"
                        },
                        "binary": {
                            "type": "boolean"
                        },
                        "boolean": {
                            "type": "boolean"
                        },
                        "containerNode": {
                            "type": "boolean"
                        },
                        "double": {
                            "type": "boolean"
                        },
                        "float": {
                            "type": "boolean"
                        },
                        "floatingPointNumber": {
                            "type": "boolean"
                        },
                        "int": {
                            "type": "boolean"
                        },
                        "integralNumber": {
                            "type": "boolean"
                        },
                        "long": {
                            "type": "boolean"
                        },
                        "missingNode": {
                            "type": "boolean"
                        },
                        "nodeType": {
                            "enum": [
                                "ARRAY",
                                "BINARY",
                                "BOOLEAN",
                                "MISSING",
                                "NULL",
                                "NUMBER",
                                "OBJECT",
                                "POJO",
                                "STRING"
                            ],
                            "type": "string"
                        },
                        "null": {
                            "type": "boolean"
                        },
                        "number": {
                            "type": "boolean"
                        },
                        "object": {
                            "type": "boolean"
                        },
                        "pojo": {
                            "type": "boolean"
                        },
                        "short": {
                            "type": "boolean"
                        },
                        "textual": {
                            "type": "boolean"
                        },
                        "valueNode": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "op",
                "path"
            ]
        },
        "PageResponseAccountData": {
            "properties": {
                "pageNumber": {
                    "description": "Current page number",
                    "format": "int32",
                    "type": "integer"
                },
                "pageSize": {
                    "description": "Number of entries per page",
                    "format": "int32",
                    "type": "integer"
                },
                "totalElements": {
                    "description": "Total number of entries",
                    "format": "int64",
                    "type": "integer"
                },
                "totalPages": {
                    "description": "Total number of pages",
                    "format": "int32",
                    "type": "integer"
                },
                "values": {
                    "description": "Page entries",
                    "items": {
                        "properties": {
                            "approveLimitAmount": {
                                "description": "Approved limit amount",
                                "exclusiveMinimum": false,
                                "minimum": 0,
                                "type": "number"
                            },
                            "autoLimitAmount": {
                                "description": "Automatic limit amount",
                                "exclusiveMinimum": false,
                                "minimum": 0,
                                "type": "number"
                            },
                            "availableBalanceAmount": {
                                "description": "Available balance amount",
                                "exclusiveMinimum": false,
                                "minimum": 0,
                                "type": "number"
                            },
                            "availableDailyAmount": {
                                "description": "Remaining amount available for current day",
                                "exclusiveMinimum": false,
                                "minimum": 0,
                                "type": "number"
                            },
                            "created": {
                                "description": "Date and time created (ISO8601 yyyy-mm-ddThh:mm:ss.nnnZ)",
                                "format": "date-time",
                                "type": "string"
                            },
                            "createdBy": {
                                "description": "Member UUID (ISO/IEC 9834-8:201)",
                                "type": "string",
                                "x-nullable": true
                            },
                            "dailyLimitAmount": {
                                "description": "Maximum amount available per day",
                                "exclusiveMinimum": false,
                                "minimum": 0,
                                "type": "number"
                            },
                            "lastModified": {
                                "description": "Date and time last modified (ISO8601 yyyy-mm-ddThh:mm:ss.nnnZ)",
                                "format": "date-time",
                                "type": "string"
                            },
                            "memberUuid": {
                                "description": "Member UUID (ISO/IEC 9834-8:201)",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            },
                            "modifiedBy": {
                                "description": "Member UUID (ISO/IEC 9834-8:201)",
                                "type": "string",
                                "x-nullable": true
                            },
                            "requestId": {
                                "description": "External request identifier. Recommended UUID (ISO/IEC 9834-8:201)",
                                "maxLength": 36,
                                "minLength": 0,
                                "type": "string",
                                "x-nullable": true
                            },
                            "transactionLimitAmount": {
                                "description": "Maximum amount per transaction",
                                "type": "number"
                            },
                            "uuid": {
                                "description": "UUID (ISO/IEC 9834-8:201)",
                                "maxLength": 36,
                                "minLength": 36,
                                "type": "string"
                            }
                        },
                        "required": [
                            "created",
                            "lastModified",
                            "memberUuid",
                            "uuid"
                        ],
                        "type": "object",
                        "description": "Account return data"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        }
    },
    "securityDefinitions": {},
    "schemes": [
        "https"
    ],
    "host": "apim-tunnel.trustlinkhosting.com:8465",
    "basePath": "/sandbox/chips/businesses",
    "tags": [
        {
            "name": "Smart Safe"
        }
    ],
    "buildtarget": "stoplight"
}